
(:patch
 (:om-version 2.1E-5)
 (:name "mem")
 (:doc "")
 (:info
  (:created "2018/04/04 15:15:06")
  (:modified "2019/06/03 12:11:14"))
 (:window (:size (1213 706)) (:position (109 41)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:reference om-random)
   (:type :function)
   (:group-id nil)
   (:name "om-random")
   (:x 62)
   (:y 72)
   (:w 97)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 99)
   (:y 204)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 36)
   (:id 1))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 134)
   (:y 204)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 95)
   (:id 2))
  (:box
   (:reference list)
   (:type :function)
   (:group-id nil)
   (:name "list")
   (:x 81)
   (:y 240)
   (:w 116)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:reference om-random)
   (:type :function)
   (:group-id nil)
   (:name "om-random")
   (:x 39)
   (:y 439)
   (:w 97)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 4))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 124)
   (:y 469)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 5))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 56)
   (:y 573)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 6))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 107)
   (:y 572)
   (:w 61)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 20 20))
   (:id 7))
  (:comment
   (:x 59)
   (:y 8)
   (:w 375)
   (:h 39)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Verdana") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "MEM: a box with \"memory\" -- keeps track of results from previous evaluations")
   (:id 8))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 99)
   (:y 108)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 36)
   (:id 9))
  (:comment
   (:x 58)
   (:y 290)
   (:w 160)
   (:h 33)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Left outlet = current value
Right outlet = previous value")
   (:id 10))
  (:box
   (:reference om-random)
   (:type :function)
   (:group-id nil)
   (:name "om-random")
   (:x 289)
   (:y 70)
   (:w 97)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 326)
   (:y 202)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 37)
   (:id 12))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 361)
   (:y 202)
   (:w 67)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 81 99 25))
   (:id 13))
  (:box
   (:reference list)
   (:type :function)
   (:group-id nil)
   (:name "list")
   (:x 308)
   (:y 239)
   (:w 116)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 326)
   (:y 106)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 37)
   (:id 15))
  (:comment
   (:x 300)
   (:y 289)
   (:w 207)
   (:h 32)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Left outlet = current value
Right outlet = list of N previous values")
   (:id 16))
  (:comment
   (:x 428)
   (:y 124)
   (:w 142)
   (:h 59)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Right inlet = size of the memory. If non-NIL, the memory will be  list of <n> previous values.")
   (:id 17))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 379)
   (:y 105)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 18))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 76)
   (:y 474)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value 0)
   (:id 19))
  (:comment
   (:x 13)
   (:y 391)
   (:w 174)
   (:h 34)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "... also works in reactive mode: evaluate the 'om-random' box")
   (:id 20))
  (:box
   (:reference slider)
   (:type :interface)
   (:group-id nil)
   (:name "slider")
   (:x 4399/12)
   (:y 691/2)
   (:w 25)
   (:h 88)
   (:color nil)
   (:border (:number-or-nil (:number 1.5) (:t-or-nil t)))
   (:roundness (:number-or-nil (:number 6) (:t-or-nil t)))
   (:min-value 0)
   (:max-value 100)
   (:increment 1)
   (:orientation :vertical)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive t)))
   (:value 15)
   (:id 21))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 344)
   (:y 502)
   (:w 149)
   (:h 67)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value
    (:list
     16
     37
     41
     69
     71
     63
     60
     15
     12
     7
     10
     11
     21
     41
     46
     66
     69
     70
     69
     68
     57
     55
     41
     40
     39
     40
     46
     47
     56
     57))
   (:id 22))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 397)
   (:y 408)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 30)
   (:id 23))
  (:box
   (:reference bpf)
   (:type :object)
   (:group-id nil)
   (:name nil)
   (:x 2707/12)
   (:y 1147/2)
   (:w 239)
   (:h 72)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :italic)))
   (:align :center)
   (:name nil)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 2000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive t)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 58000.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.3 0.3 0.3 1.0))
       (:decimals 2)
       (:x-points
        (:list
         0.0
         2000.0
         4000.0
         6000.0
         8000.0
         10000.0
         12000.0
         14000.0
         16000.0
         18000.0
         20000.0
         22000.0
         24000.0
         26000.0
         28000.0
         30000.0
         32000.0
         34000.0
         36000.0
         38000.0
         40000.0
         42000.0
         44000.0
         46000.0
         48000.0
         50000.0
         52000.0
         54000.0
         56000.0
         58000.0))
       (:y-points
        (:list
         16.0
         37.0
         41.0
         69.0
         71.0
         63.0
         60.0
         15.0
         12.0
         7.0
         10.0
         11.0
         21.0
         41.0
         46.0
         66.0
         69.0
         70.0
         69.0
         68.0
         57.0
         55.0
         41.0
         40.0
         39.0
         40.0
         46.0
         47.0
         56.0
         57.0))))
     (:add-slots
      ((:decimals 2)
       (:color (:color 0.3 0.3 0.3 1.0))
       (:name nil)
       (:action nil)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))))))
   (:id 24))
  (:comment
   (:x 605)
   (:y 365)
   (:w 133)
   (:h 48)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "if size is a float, then it represents a TIME WINDOW (in seconds)")
   (:id 25))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 638)
   (:y 504)
   (:w 149)
   (:h 67)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value (:list 15 16))
   (:id 26))
  (:box
   (:reference single-float)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 691)
   (:y 420)
   (:w 33)
   (:h 30)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1.0)
   (:id 27))
  (:box
   (:reference bpf)
   (:type :object)
   (:group-id nil)
   (:name nil)
   (:x 524)
   (:y 575)
   (:w 239)
   (:h 72)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :italic)))
   (:align :center)
   (:name nil)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 2000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive t)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 2000.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.3 0.3 0.3 1.0))
       (:decimals 2)
       (:x-points (:list 0.0 2000.0))
       (:y-points (:list 15.0 16.0))))
     (:add-slots
      ((:decimals 2)
       (:color (:color 0.3 0.3 0.3 1.0))
       (:name nil)
       (:action nil)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))))))
   (:id 28))
  (:box
   (:reference slider)
   (:type :interface)
   (:group-id nil)
   (:name "slider")
   (:x 10831/12)
   (:y 55)
   (:w 85)
   (:h 101)
   (:color nil)
   (:border (:number-or-nil (:number 1.5) (:t-or-nil t)))
   (:roundness (:number-or-nil (:number 6) (:t-or-nil t)))
   (:min-value 0)
   (:max-value 100)
   (:increment 1)
   (:orientation :vertical)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive t)))
   (:value 46)
   (:id 29))
  (:box
   (:reference button)
   (:type :interface)
   (:group-id nil)
   (:name "button")
   (:x 1034)
   (:y 223)
   (:w 72)
   (:h 28)
   (:color nil)
   (:border (:number-or-nil (:number 1.5) (:t-or-nil t)))
   (:roundness (:number-or-nil (:number 3) (:t-or-nil t)))
   (:send-value 34)
   (:text "push")
   (:inputs
    (:input
     (:type :key)
     (:name "send-value")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value nil)
   (:id 30))
  (:box
   (:reference button)
   (:type :interface)
   (:group-id nil)
   (:name "button")
   (:x 12895/12)
   (:y 128)
   (:w 69)
   (:h 28)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border (:number-or-nil (:number 1.5) (:t-or-nil t)))
   (:roundness (:number-or-nil (:number 3) (:t-or-nil t)))
   (:send-value t)
   (:text "Init")
   (:inputs)
   (:outputs (:output (:name "value") (:reactive t)))
   (:value nil)
   (:id 31))
  (:box
   (:reference bpf)
   (:type :object)
   (:group-id nil)
   (:name nil)
   (:x 891)
   (:y 723/2)
   (:w 229)
   (:h 73)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :italic)))
   (:align :center)
   (:name nil)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 2000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 128000.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.3 0.3 0.3 1.0))
       (:decimals 2)
       (:x-points
        (:list
         0.0
         2000.0
         4000.0
         6000.0
         8000.0
         10000.0
         12000.0
         14000.0
         16000.0
         18000.0
         20000.0
         22000.0
         24000.0
         26000.0
         28000.0
         30000.0
         32000.0
         34000.0
         36000.0
         38000.0
         40000.0
         42000.0
         44000.0
         46000.0
         48000.0
         50000.0
         52000.0
         54000.0
         56000.0
         58000.0
         60000.0
         62000.0
         64000.0
         66000.0
         68000.0
         70000.0
         72000.0
         74000.0
         76000.0
         78000.0
         80000.0
         82000.0
         84000.0
         86000.0
         88000.0
         90000.0
         92000.0
         94000.0
         96000.0
         98000.0
         100000.0
         102000.0
         104000.0
         106000.0
         108000.0
         110000.0
         112000.0
         114000.0
         116000.0
         118000.0
         120000.0
         122000.0
         124000.0
         126000.0
         128000.0))
       (:y-points
        (:list
         55.0
         56.0
         48.0
         47.0
         41.0
         40.0
         33.0
         32.0
         27.0
         24.0
         25.0
         40.0
         43.0
         62.0
         64.0
         75.0
         77.0
         84.0
         96.0
         98.0
         99.0
         100.0
         96.0
         86.0
         84.0
         75.0
         67.0
         66.0
         60.0
         58.0
         50.0
         45.0
         44.0
         53.0
         56.0
         75.0
         87.0
         88.0
         93.0
         96.0
         97.0
         91.0
         90.0
         84.0
         83.0
         76.0
         75.0
         65.0
         57.0
         53.0
         51.0
         52.0
         68.0
         71.0
         83.0
         84.0
         89.0
         88.0
         87.0
         72.0
         68.0
         66.0
         56.0
         55.0
         49.0))))
     (:add-slots
      ((:decimals 2)
       (:color (:color 0.3 0.3 0.3 1.0))
       (:name nil)
       (:action nil)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))))))
   (:id 32))
  (:box
   (:reference omor)
   (:type :function)
   (:group-id nil)
   (:name "omor")
   (:x 985)
   (:y 176)
   (:w 64)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive t))
    (:input
     (:type :optional)
     (:name "rest")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 33))
  (:box
   (:reference
    (:object
     (:class omcollect)
     (:slots ((:name "collect") (:protected-p nil) (:icon nil)))))
   (:type :special)
   (:group-id nil)
   (:name "collect")
   (:x 1008)
   (:y 595/2)
   (:w 125)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data-in")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "push")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "init")
     (:value nil)
     (:reactive t)))
   (:outputs
    (:output (:name "collect") (:reactive nil))
    (:output (:name "data-out") (:reactive t))
    (:output (:name "init") (:reactive nil)))
   (:id 34))
  (:box
   (:reference
    (:object
     (:class ommemory)
     (:slots ((:name "mem") (:protected-p nil) (:icon nil)))))
   (:type :special)
   (:group-id nil)
   (:name "mem")
   (:x 322)
   (:y 142)
   (:w 49)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "current value") (:reactive nil))
    (:output (:name "past value(s)") (:reactive nil)))
   (:id 35))
  (:box
   (:reference
    (:object
     (:class ommemory)
     (:slots ((:name "mem") (:protected-p nil) (:icon nil)))))
   (:type :special)
   (:group-id nil)
   (:name "mem")
   (:x 95)
   (:y 148)
   (:w 49)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "current value") (:reactive nil))
    (:output (:name "past value(s)") (:reactive nil)))
   (:id 36))
  (:box
   (:reference
    (:object
     (:class ommemory)
     (:slots ((:name "mem") (:protected-p nil) (:icon nil)))))
   (:type :special)
   (:group-id nil)
   (:name "mem")
   (:x 72)
   (:y 516)
   (:w 49)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "current value") (:reactive t))
    (:output (:name "past value(s)") (:reactive t)))
   (:id 37))
  (:box
   (:reference
    (:object
     (:class ommemory)
     (:slots ((:name "mem") (:protected-p nil) (:icon nil)))))
   (:type :special)
   (:group-id nil)
   (:name "mem")
   (:x 364)
   (:y 449)
   (:w 49)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "current value") (:reactive nil))
    (:output (:name "past value(s)") (:reactive t)))
   (:id 38))
  (:box
   (:reference
    (:object
     (:class ommemory)
     (:slots ((:name "mem") (:protected-p nil) (:icon nil)))))
   (:type :special)
   (:group-id nil)
   (:name "mem")
   (:x 657)
   (:y 455)
   (:w 49)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "current value") (:reactive nil))
    (:output (:name "past value(s)") (:reactive t)))
   (:id 39))
  (:comment
   (:x 497)
   (:y 10)
   (:w 129)
   (:h 37)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "!! mem has a limited scope inside this patch")
   (:id 40)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 9 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 3 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 3 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 19 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 37 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 36 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 15 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 14 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 35 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 35 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 37 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 38 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 39 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 24 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 23 :out 0))
   (:to (:box 38 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 26 :out 0))
   (:to (:box 28 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 39 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 33 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 29 :out 0))
   (:to (:box 34 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 30 :out 0))
   (:to (:box 34 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 31 :out 0))
   (:to (:box 33 :in 1))
   (:attributes (:color nil :style nil :modif (0 0))))
  (:connection
   (:from (:box 31 :out 0))
   (:to (:box 34 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 33 :out 0))
   (:to (:box 30 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 34 :out 1))
   (:to (:box 32 :in 2))
   (:attributes (:color nil :style nil :modif (0 0))))
  (:connection
   (:from (:box 35 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 35 :out 1))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 36 :out 0))
   (:to (:box 1 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 36 :out 1))
   (:to (:box 2 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 37 :out 0))
   (:to (:box 6 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 37 :out 1))
   (:to (:box 7 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 38 :out 1))
   (:to (:box 22 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 39 :out 1))
   (:to (:box 26 :in 0))
   (:attributes (:color nil :style nil :modif nil)))))