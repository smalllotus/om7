
(:patch
 (:om-version 2.1E-5)
 (:name "mem")
 (:doc "")
 (:info
  (:created "2018/04/04 15:15:06")
  (:modified "2019/03/27 10:08:59"))
 (:window (:size (1439 798)) (:position (109 41)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:reference om-random)
   (:type :function)
   (:group-id nil)
   (:name "om-random")
   (:x 62)
   (:y 72)
   (:w 97)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 99)
   (:y 204)
   (:w 32)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 54)
   (:id 1))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 134)
   (:y 204)
   (:w 58)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 73)
   (:id 2))
  (:box
   (:reference list)
   (:type :function)
   (:group-id nil)
   (:name "list")
   (:x 81)
   (:y 240)
   (:w 116)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:reference om-random)
   (:type :function)
   (:group-id nil)
   (:name "om-random")
   (:x 39)
   (:y 439)
   (:w 97)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 4))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 124)
   (:y 469)
   (:w 32)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 5))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 56)
   (:y 573)
   (:w 32)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 34)
   (:id 6))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 107)
   (:y 572)
   (:w 73)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 34 76 76))
   (:id 7))
  (:comment
   (:x 59)
   (:y 8)
   (:w 375)
   (:h 39)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Verdana") (:size 14) (:style :bold)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "MEM: a box with \"memory\" which keeps track of results from previous evaluations")
   (:id 8))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 99)
   (:y 108)
   (:w 32)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 54)
   (:id 9))
  (:comment
   (:x 58)
   (:y 291)
   (:w 160)
   (:h 33)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Left outlet = current value
Right outlet = previous value")
   (:id 10))
  (:box
   (:reference om-random)
   (:type :function)
   (:group-id nil)
   (:name "om-random")
   (:x 289)
   (:y 70)
   (:w 97)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 100)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 326)
   (:y 202)
   (:w 32)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 47)
   (:id 12))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 361)
   (:y 202)
   (:w 88)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 0 99 90))
   (:id 13))
  (:box
   (:reference list)
   (:type :function)
   (:group-id nil)
   (:name "list")
   (:x 308)
   (:y 238)
   (:w 116)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :optional) (:name "x") (:value nil) (:reactive nil))
    (:input
     (:type :optional)
     (:name "x")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 326)
   (:y 106)
   (:w 32)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 47)
   (:id 15))
  (:comment
   (:x 300)
   (:y 289)
   (:w 207)
   (:h 32)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Left outlet = current value
Right outlet = list of N previous values")
   (:id 16))
  (:comment
   (:x 428)
   (:y 124)
   (:w 142)
   (:h 59)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Right inlet = size of the memory. If non-NIL, the memory will be  list of <n> previous values.")
   (:id 17))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 379)
   (:y 105)
   (:w 32)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 18))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 76)
   (:y 474)
   (:w 32)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value 34)
   (:id 19))
  (:comment
   (:x 13)
   (:y 391)
   (:w 174)
   (:h 34)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "... also works in reactive mode: evaluate the 'om-random' box")
   (:id 20))
  (:box
   (:reference
    (:object
     (:class ommemory)
     (:slots ((:name "mem") (:protected-p nil) (:icon nil)))))
   (:type :special)
   (:group-id nil)
   (:name "mem")
   (:x 95)
   (:y 147)
   (:w 50)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "current value") (:reactive nil))
    (:output (:name "past value(s)") (:reactive nil)))
   (:id 21))
  (:box
   (:reference
    (:object
     (:class ommemory)
     (:slots ((:name "mem") (:protected-p nil) (:icon nil)))))
   (:type :special)
   (:group-id nil)
   (:name "mem")
   (:x 328)
   (:y 143)
   (:w 50)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "current value") (:reactive nil))
    (:output (:name "past value(s)") (:reactive nil)))
   (:id 22))
  (:box
   (:reference
    (:object
     (:class ommemory)
     (:slots ((:name "mem") (:protected-p nil) (:icon nil)))))
   (:type :special)
   (:group-id nil)
   (:name "mem")
   (:x 83)
   (:y 512)
   (:w 50)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value nil)
     (:reactive t)))
   (:outputs
    (:output (:name "current value") (:reactive t))
    (:output (:name "past value(s)") (:reactive t)))
   (:id 23))
  (:box
   (:reference slider)
   (:type :interface)
   (:group-id nil)
   (:name "slider")
   (:x 4171/12)
   (:y 725/2)
   (:w 25)
   (:h 88)
   (:color nil)
   (:border (:number-or-nil (:number 1.5) (:t-or-nil t)))
   (:roundness (:number-or-nil (:number 6) (:t-or-nil t)))
   (:min-value 0)
   (:max-value 100)
   (:increment 1)
   (:orientation :vertical)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive t)))
   (:value 62)
   (:id 24))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 325)
   (:y 519)
   (:w 149)
   (:h 67)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value
    (:list
     62
     62
     61
     61
     61
     60
     59
     59
     56
     56
     55
     55
     55
     55
     54
     53
     53
     52
     52
     51
     51
     49
     48
     47
     45
     45
     45
     46
     46
     47))
   (:id 25))
  (:box
   (:reference
    (:object
     (:class ommemory)
     (:slots ((:name "mem") (:protected-p nil) (:icon nil)))))
   (:type :special)
   (:group-id nil)
   (:name "mem")
   (:x 360)
   (:y 471)
   (:w 50)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value 1.0)
     (:reactive nil)))
   (:outputs
    (:output (:name "current value") (:reactive nil))
    (:output (:name "past value(s)") (:reactive t)))
   (:id 26))
  (:box
   (:reference fixnum)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 378)
   (:y 425)
   (:w 34)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 30)
   (:id 27))
  (:box
   (:reference bpf)
   (:type :object)
   (:group-id nil)
   (:name nil)
   (:x 2479/12)
   (:y 1181/2)
   (:w 239)
   (:h 72)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :italic)))
   (:name nil)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 2000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive t)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 2000.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.3 0.3 0.3 1.0))
       (:decimals 2)
       (:x-points (:list 0.0 2000.0))
       (:y-points (:list 0.0 100.0))))
     (:add-slots
      ((:decimals 2)
       (:color (:color 0.3 0.3 0.3 1.0))
       (:name "BPF")
       (:action nil)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))))))
   (:id 28))
  (:comment
   (:x 586)
   (:y 382)
   (:w 133)
   (:h 48)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "if size is a float, then it represents a TIME WINDOW (in seconds)")
   (:id 29))
  (:box
   (:reference cons)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 619)
   (:y 521)
   (:w 149)
   (:h 67)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs
    (:input (:type :optional) (:name "in") (:value nil) (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value
    (:list 62 62 62 61 61 61 60 59 59 56 56 55 55 55 55 54 53 53 52))
   (:id 30))
  (:box
   (:reference
    (:object
     (:class ommemory)
     (:slots ((:name "mem") (:protected-p nil) (:icon nil)))))
   (:type :special)
   (:group-id nil)
   (:name "mem")
   (:x 654)
   (:y 472)
   (:w 50)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data to record in memory")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "size of memory")
     (:value 1.0)
     (:reactive nil)))
   (:outputs
    (:output (:name "current value") (:reactive nil))
    (:output (:name "past value(s)") (:reactive t)))
   (:id 31))
  (:box
   (:reference single-float)
   (:type :value)
   (:group-id nil)
   (:name "value box")
   (:x 672)
   (:y 437)
   (:w 34)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1.0)
   (:id 32))
  (:box
   (:reference bpf)
   (:type :object)
   (:group-id nil)
   (:name nil)
   (:x 6007/12)
   (:y 1185/2)
   (:w 239)
   (:h 72)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :italic)))
   (:name nil)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 2000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive t)))
   (:window (:size (nil nil)) (:position (nil nil)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 2000.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.3 0.3 0.3 1.0))
       (:decimals 2)
       (:x-points (:list 0.0 2000.0))
       (:y-points (:list 0.0 100.0))))
     (:add-slots
      ((:decimals 2)
       (:color (:color 0.3 0.3 0.3 1.0))
       (:name "BPF")
       (:action nil)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))))))
   (:id 33))
  (:box
   (:reference slider)
   (:type :interface)
   (:group-id nil)
   (:name "slider")
   (:x 11731/12)
   (:y 160)
   (:w 40)
   (:h 159)
   (:color nil)
   (:border (:number-or-nil (:number 1.5) (:t-or-nil t)))
   (:roundness (:number-or-nil (:number 6) (:t-or-nil t)))
   (:min-value 0)
   (:max-value 100)
   (:increment 1)
   (:orientation :vertical)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive t)))
   (:value nil)
   (:id 34))
  (:box
   (:reference button)
   (:type :interface)
   (:group-id nil)
   (:name "button")
   (:x 1092)
   (:y 280)
   (:w 72)
   (:h 28)
   (:color nil)
   (:border (:number-or-nil (:number 1.5) (:t-or-nil t)))
   (:roundness (:number-or-nil (:number 3) (:t-or-nil t)))
   (:send-value 34)
   (:text "push")
   (:inputs
    (:input
     (:type :key)
     (:name "send-value")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "value") (:reactive t)))
   (:value nil)
   (:id 35))
  (:box
   (:reference button)
   (:type :interface)
   (:group-id nil)
   (:name "button")
   (:x 13591/12)
   (:y 185)
   (:w 69)
   (:h 28)
   (:color (:color-or-nil (:color nil) (:t-or-nil nil)))
   (:border (:number-or-nil (:number 1.5) (:t-or-nil t)))
   (:roundness (:number-or-nil (:number 3) (:t-or-nil t)))
   (:send-value t)
   (:text "Init")
   (:inputs)
   (:outputs (:output (:name "value") (:reactive t)))
   (:value nil)
   (:id 36))
  (:box
   (:reference bpf)
   (:type :object)
   (:group-id nil)
   (:name nil)
   (:x 949)
   (:y 837/2)
   (:w 229)
   (:h 73)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 10) (:style :italic)))
   (:name nil)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 2000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive t)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 2000.0)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.3 0.3 0.3 1.0))
       (:decimals 2)
       (:x-points (:list 0.0 2000.0))
       (:y-points (:list 0.0 100.0))))
     (:add-slots
      ((:decimals 2)
       (:color (:color 0.3 0.3 0.3 1.0))
       (:name "BPF")
       (:action nil)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))))))
   (:id 37))
  (:box
   (:reference omor)
   (:type :function)
   (:group-id nil)
   (:name "omor")
   (:x 1043)
   (:y 233)
   (:w 64)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive t))
    (:input
     (:type :optional)
     (:name "rest")
     (:value nil)
     (:reactive t)))
   (:outputs (:output (:name "out") (:reactive t)))
   (:id 38))
  (:box
   (:reference
    (:object
     (:class omcollect)
     (:slots ((:name "collect") (:protected-p nil) (:icon nil)))))
   (:type :special)
   (:group-id nil)
   (:name "collect")
   (:x 1066)
   (:y 709/2)
   (:w 125)
   (:h 42)
   (:color
    (:color-or-nil (:color (:color 0.82 0.7 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :top)
   (:inputs
    (:input
     (:type :standard)
     (:name "data-in")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "push")
     (:value nil)
     (:reactive t))
    (:input
     (:type :standard)
     (:name "init")
     (:value nil)
     (:reactive t)))
   (:outputs
    (:output (:name "collect") (:reactive nil))
    (:output (:name "data-out") (:reactive t))
    (:output (:name "init") (:reactive nil)))
   (:id 39)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 9 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 1 :out 0))
   (:to (:box 3 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 3 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 19 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 23 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 21 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 15 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 12 :out 0))
   (:to (:box 14 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 14 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 15 :out 0))
   (:to (:box 22 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 22 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 23 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 0))
   (:to (:box 1 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 21 :out 1))
   (:to (:box 2 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 12 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 22 :out 1))
   (:to (:box 13 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 23 :out 0))
   (:to (:box 6 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 23 :out 1))
   (:to (:box 7 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 26 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 31 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 25 :out 0))
   (:to (:box 28 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 26 :out 1))
   (:to (:box 25 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 26 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 30 :out 0))
   (:to (:box 33 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 31 :out 1))
   (:to (:box 30 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 32 :out 0))
   (:to (:box 31 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 38 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 39 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 35 :out 0))
   (:to (:box 39 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 36 :out 0))
   (:to (:box 38 :in 1))
   (:attributes (:color nil :style nil :modif (0 0))))
  (:connection
   (:from (:box 36 :out 0))
   (:to (:box 39 :in 2))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 38 :out 0))
   (:to (:box 35 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 39 :out 1))
   (:to (:box 37 :in 2))
   (:attributes (:color nil :style nil :modif (0 0))))))